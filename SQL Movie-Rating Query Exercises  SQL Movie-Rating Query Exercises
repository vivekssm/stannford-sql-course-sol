You've started a new movie-rating website, and you've been collecting data on reviewers' ratings of various movies. There's not much data yet, but you can still try out some interesting queries. Here's the schema:

Movie ( mID, title, year, director )
English: There is a movie with ID number mID, a title, a release year, and a director.

Reviewer ( rID, name )
English: The reviewer with ID number rID has a certain name.

Rating ( rID, mID, stars, ratingDate )
English: The reviewer rID gave the movie mID a number of stars rating (1-5) on a certain ratingDate.

1.
Find the titles of all movies directed by Steven Spielberg.

select title from movie where director='Steven Spielberg'

Q2
Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order.

select distinct year from movie inner join rating on movie.mid=rating.mid where stars in (4,5) order by year asc

Q3
Find the titles of all movies that have no ratings.

select title from movie left join rating on movie.mid=rating.mid where rid is NULL


Q4
Some reviewers didn't provide a date with their rating. Find the names of all reviewers who have ratings with a NULL value for the date.

select name from reviewer inner join rating on reviewer.rid=rating.rid where ratingdate is NULL

Q5
Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. 
Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars.

select name,title,stars,ratingdate from movie inner join rating on movie.mid=rating.mid inner join reviewer on rating.rid=reviewer.rid 
order by name,title,stars


Q6
For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, 
return the reviewer's name and the title of the movie.
----------------------------------------------------------------------------------------------------------------------------
select name,title from movie inner join rating on movie.mid=rating.mid inner join reviewer on rating.rid=reviewer.rid 
inner join rating r1 on rating.rid=r1.rid and rating.mid=r1.mid 
where r1.stars>rating.stars limit 1;
-----------------------------------------------------------------------------------------------------------------------------
SELECT r.name, m.title
FROM movie m, reviewer r,
  (
    SELECT r1.rid, r1.mid
    FROM rating r1, rating r2
    WHERE r1.rid = r2.rid AND r1.mid = r2.mid
    AND r1.stars > r2.stars
    AND r1.ratingdate > r2.ratingdate
  ) AS a
WHERE m.mid = a.mid AND r.rid = a.rid;
-------------------------------------------------------------------------------------------------------------------------

7.For each movie that has at least one rating, find the highest number of stars that movie received.
Return the movie title and number of stars. Sort by movie title

select title,stars from movie inner join rating on movie.mid=rating.mid group by movie.mid having count(title)>0 order by title

Q8.
For each movie, return the title and the 'rating spread', that is, the difference between highest and lowest ratings given to that movie. 
Sort by rating spread from highest to lowest, then by movie title.

select * from (select title,max(stars)-min(stars)as stars from movie inner join rating on movie.mid=rating.mid group by movie.mid)
order by stars desc,title


9.Find the difference between the average rating of movies released before 1980 
and the average rating of movies released after 1980.


SELECT AVG(early_avgs.avgs) - AVG(later_avgs.avgs)
FROM(select avg(stars) as avgs from movie inner join rating on movie.mid=rating.mid where year<1980 group by movie.mid) AS early_avgs,
    (select avg(stars) as avgs from movie inner join rating on movie.mid=rating.mid where year>1980 group by movie.mid) AS later_avgs;
